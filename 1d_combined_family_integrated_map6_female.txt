> library(qtl)
> qtl1d.int.f<-read.cross(format="csv",file="1d_combined_family_integrated_map6_female.csv")

> qtl1d.int.f.gp<-calc.genoprob(qtl1d.int.f,step=0.2,error.prob=0.001)
> qtl1d.int.f.sim<-sim.geno(qtl1d.int.f.gp,step=0.2,n.draw=10000,map.function=c("kosambi"),err=0.001)

=====================================
> qtl1d.int.f$pheno$fam<-as.factor(qtl1d.int.f$pheno$fam)
> anova(aov(qtl1d.int.f$pheno$pheno~qtl1d.int.f$pheno$fam))
> qtl1d.int.f$pheno$fam<-as.numeric(qtl1d.int.f$pheno$fam)

=====================================
> qtl1d.int.f$pheno$fam<-as.numeric(qtl1d.int.f$pheno$fam)
> qtl1d.int.f.one.cov<-scanone(qtl1d.int.f.gp,method="em",addcovar=qtl1d.int.f$pheno$fam)
> summary(qtl1d.int.f.one.cov)

> qtl1d.int.f.cim.1.20<-cim(qtl1d.int.f.gp,n.marcovar=1,window=20)
> summary(qtl1d.int.f.cim.1.20)

> qtl1d.int.f.cim.2.20<-cim(qtl1d.int.f.gp,n.marcovar=2,window=20)
> summary(qtl1d.int.f.cim.2.20)

> qtl1d.int.f.cim.3.20<-cim(qtl1d.int.f.gp,n.marcovar=3,window=20)
> summary(qtl1d.int.f.cim.3.20)

> qtl1d.int.f.cim.1.10<-cim(qtl1d.int.f.gp,n.marcovar=1,window=10)
> summary(qtl1d.int.f.cim.1.10)
 
> qtl1d.int.f.cim.2.10<-cim(qtl1d.int.f.gp,n.marcovar=2,window=10)
> summary(qtl1d.int.f.cim.2.10)

> qtl1d.int.f.cim.3.10<-cim(qtl1d.int.f.gp,n.marcovar=3,window=10)
> summary(qtl1d.int.f.cim.3.10)

> qtl1d.int.f.cim.1.5<-cim(qtl1d.int.f.gp,n.marcovar=1,window=5)
> summary(qtl1d.int.f.cim.1.5)

> qtl1d.int.f.cim.2.5<-cim(qtl1d.int.f.gp,n.marcovar=2,window=5)
> summary(qtl1d.int.f.cim.2.5)

> qtl1d.int.f.cim.3.5<-cim(qtl1d.int.f.gp,n.marcovar=3,window=5)
> summary(qtl1d.int.f.cim.3.5)

====================================== 
> qtl1d.int.f.two<-scantwo(qtl1d.int.f.gp)
> summary(qtl1d.int.f.two)

=====================================
> fam<-pull.pheno(qtl1d.int.f,"fam")
> fam<-data.frame(fam)
> qtl1d.int.f.make1<-makeqtl(qtl1d.int.f.sim,chr=1,pos=60.1)
> qtl1d.int.f.fit.make1.cov<-fitqtl(qtl1d.int.f.sim,qtl=qtl1d.int.f.make1,covar=fam,formula=y~Q1+fam)
> summary(qtl1d.int.f.fit.make1.cov)
> qtl1d.int.f.refine1.cov<-refineqtl(qtl1d.int.f.sim,qtl=qtl1d.int.f.make1,covar=fam,method="imp",formula=y~Q1+fam,verbose=FALSE)
> summary(qtl1d.int.f.refine1.cov)
> qtl1d.int.f.add1.cov<-addqtl(qtl1d.int.f.sim,qtl=qtl1d.int.f.refine1.cov,covar=fam,formula=y~Q1+Q2+fam)
> summary(qtl1d.int.f.add1.cov)

> qtl1d.int.f.make2<-makeqtl(qtl1d.int.f.sim,chr=c(1,1),pos=c(50.2,69.6))
> qtl1d.int.f.fit.make2.cov<-fitqtl(qtl1d.int.f.sim,qtl=qtl1d.int.f.make2,covar=fam,formula=y~Q1+Q2+fam)
> summary(qtl1d.int.f.fit.make2.cov)
> qtl1d.int.refine2.cov<-refineqtl(qtl1d.int.f.sim,qtl=qtl1d.int.f.make2,covar=fam,method="imp",formula=y~Q1+Q2+fam,verbose=FALSE)
> summary(qtl1d.int.refine2.cov)
> qtl1d.int.f.fit.refine2.cov<-fitqtl(qtl1d.int.f.sim,qtl=qtl1d.int.refine2.cov,covar=fam,formula=y~Q1+Q2+fam)
> summary(qtl1d.int.f.fit.refine2.cov)
> qtl1d.int.f.add2.cov<-addqtl(qtl1d.int.f.sim,qtl=qtl1d.int.refine2.cov,covar=fam,formula=y~Q1+Q2+Q3+fam)


================================================
> qtl1d.int.f.refine1.cov.eff<-fitqtl(qtl1d.int.f.sim,qtl=qtl1d.int.f.refine1.cov,formula=y~Q1,dropone=FALSE,get.est=TRUE)
> 
> lodint(qtl1d.int.f.one.cov)
> lodint(qtl1d.int.f.one.cov,expandtomarkers=TRUE)
> lodint(qtl1d.int.f.refine1.cov,qtl.index=1)
> lodint(qtl1d.int.f.refine1.cov,qtl.index=1,expandtomarkers=TRUE)
> lodint(qtl1d.int.refine2.cov,qtl.index=1)
> lodint(qtl1d.int.refine2.cov,qtl.index=1,expandtomarkers=TRUE)
> lodint(qtl1d.int.refine2.cov,qtl.index=2)
> lodint(qtl1d.int.refine2.cov,qtl.index=2,expandtomarkers=TRUE)

=============================================
> find.marker(qtl1d.int.f,chr=1,pos=60.4)
> find.marker(qtl1d.int.f,chr=1,pos=69.4)

> qtl1d.int.f.eff.q1<-effectplot(qtl1d.int.f.sim,mname1="S000208_431689",draw=FALSE)
> qtl1d.int.f.eff.q1

> qtl1d.int.f.eff.q2<-effectplot(qtl1d.int.f.sim,mname1="S000570_559392",draw=FALSE)
> qtl1d.int.f.eff.q2

> qtl1d.int.f.refine1.eff<-fitqtl(qtl1d.int.f.sim,qtl=qtl1d.int.f.refine1,formula=y~Q1,dropone=FALSE,get.est=TRUE)
> summary(qtl1d.int.f.refine1.eff)

======================================
> qtl1d.int.f.one.perm<-scanone(qtl1d.int.f.gp,n.perm=10000,verbose=FALSE)
> summary(qtl1d.int.f.one.perm)
> 
> qtl1d.int.f.perm2<-scantwo(qtl1d.int.f.sim,method="hk",n.perm=1000)
Doing permutation in batch mode ...
> summary(qtl1d.int.f.perm2)

> qtl1d.int.f.pen<-calc.penalties(qtl1d.int.f.perm2)
> print(qtl1d.int.f.pen)
